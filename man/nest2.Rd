% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nest2.R
\name{nest2}
\alias{nest2}
\alias{unnest2}
\title{Nesting and unnesting}
\usage{
nest2(df, ...)

unnest2(df, col, id = NULL, keep_empty = FALSE, ptype = NULL)
}
\arguments{
\item{df}{A data frame.}

\item{...}{Name-variable pairs of the form \code{new_col = c(col1, col2, col3)},
that describe how you wish to pack existing columns into new columns.
The right hand side can be any expression supported by tidyselect.}

\item{col}{Column to unchop (automatically quoted).

This should be a list-column containing generalised vectors (e.g.
any mix of \code{NULL}s, atomic vector, S3 vectors, a lists, or data frames).}

\item{id}{A string specifying giving the name of a new column which will
contain the inner names of \code{col}. If unnamed, \code{col} will instead contain
numeric indices.}

\item{keep_empty}{By default, elements of \code{col} that have size zero will
be ommitted from the output. Setting \code{keep_empty = TRUE} will ensure
that they're preserved}

\item{ptype}{Optionally, supply a prototype for the output \code{col}, overriding
the default that will be guessed from the combination of individual
values.}
}
\description{
Nesting and unnesting change both the length and width of a data frame.
They primarily work with nested-dfs, list-cols of data frames. See \code{\link[=unchop]{unchop()}}
and \code{\link[=unpack]{unpack()}} for tools tailored for list-cols of 1d vectors.
}
\details{
Learn more in \code{vignette("chop-pack-nest")}.
}
\examples{
# nest =============================================================
df <- tibble(x = c(1, 1, 1, 2, 2, 3), y = 1:6, z = 6:1)
# Note that we get one row of output for each unique combination of
# non-chopped variables
df \%>\% nest(c(y, z))
# cf nest
df \%>\% chop(c(y, z))

# unnest ===========================================================
df <- tibble(
  x = 1:3,
  y = list(
    NULL,
    tibble(a = 1, b = 2),
    tibble(a = 1:3, b = 3:1)
  )
)
df \%>\% unnest2(y)
df \%>\% unnest2(y, keep_empty = TRUE)
}
